'''
******* 문제 푼 후 느낀 것 *********

처음에 어떻게 풀지 몰라서 그냥 정렬 없이 
배열을 2중으로 돌면서 찾는 방법을 생각했었다.

못풀겠어서 풀이를 보니,

끝나는 시간이 빠를수록 더 많은 회의가 진행될 수 있기 때문에 끝나는 시간 순으로 정렬한다.
그리고 회의가 끝나는 동시에 다음회의가 시작될 수 있기 때문에, 끝나는 시간이 동일하다면 시작시간이 더 짧은것을 아앞으로 보내준다.
왜냐하면 (8,8) (4,8) (1,3) 과 같은 경우가 있을때 (1,3) (8,8) (4,8) 순으로 정렬되게 되면 원래는 3개가 가능해야 되지만 저 경우에는 2개만 가능하기 때문이다.

## 다시해보기
'''

'''
2022/04/22
boj.kr/1931

회의실 배정

문제 :
한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 
각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 
단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

입력 :
첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 
시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.

결과 :
첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.

'''
import sys
input = sys.stdin.readline

N = int(input())

arr = []
for i in range(N):
    a, b = map(int, input().split())
    arr.append((a, b))

sort_arr = sorted(arr, key=lambda x: (x[1], x[0]))

start, end = sort_arr[0]
count = 1
for i in range(1, len(sort_arr)):
    a, b = sort_arr[i]

    if end <= a:
        count += 1
        start = a
        end = b

print(count)
